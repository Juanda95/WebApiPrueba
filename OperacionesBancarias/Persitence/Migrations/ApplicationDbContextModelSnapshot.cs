// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persitence.Contexts;

#nullable disable

namespace Persitence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.entities.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("NumeroCuenta")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Numero_cuenta");

                    b.Property<int?>("SaldoInicial")
                        .HasColumnType("int")
                        .HasColumnName("Saldo_inicial");

                    b.Property<string>("TipoCuenta")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tipo_cuenta");

                    b.HasKey("Id")
                        .HasName("PK__Cuentas__3214EC07546653EE");

                    b.HasIndex("IdCliente");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Domain.entities.Movimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdCuenta")
                        .HasColumnType("int");

                    b.Property<int?>("Saldo")
                        .HasColumnType("int")
                        .HasColumnName("saldo");

                    b.Property<string>("TipoMovimiento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tipo_movimiento");

                    b.Property<int?>("Valor")
                        .HasColumnType("int")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("PK__Movimien__3214EC07DD5034B8");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdCuenta");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("Domain.entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id")
                        .HasName("PK__Persona__234er45676677");

                    b.ToTable("Personas");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Domain.entities.Cliente", b =>
                {
                    b.HasBaseType("Domain.entities.Persona");

                    b.Property<string>("Clienteid")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("bit");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Domain.entities.Cuenta", b =>
                {
                    b.HasOne("Domain.entities.Cliente", "IdClienteNavigation")
                        .WithMany("Cuenta")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Cuenta_Cliente");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("Domain.entities.Movimiento", b =>
                {
                    b.HasOne("Domain.entities.Cliente", "IdClienteNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Movimientos_Cliente");

                    b.HasOne("Domain.entities.Cuenta", "IdCuentaNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdCuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Movimientos_Cuenta");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdCuentaNavigation");
                });

            modelBuilder.Entity("Domain.entities.Cliente", b =>
                {
                    b.HasOne("Domain.entities.Persona", null)
                        .WithOne()
                        .HasForeignKey("Domain.entities.Cliente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.entities.Cuenta", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Domain.entities.Cliente", b =>
                {
                    b.Navigation("Cuenta");

                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
